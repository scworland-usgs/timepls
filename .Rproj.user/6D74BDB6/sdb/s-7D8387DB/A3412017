{
    "collab_server" : "",
    "contents" : "#' @title daily_pls\n#' @description Performs pls regression on daily data for a given number of lags.\n#' @param data Data frame that consists of columns named date, month, day, and the time series\n#' to be used for pls regression. In version 0.0.1, the response data must be called \"cfs\", and the\n#' explanatory time series must be called \"p\", \"tmax\", and \"tmin\".\n#' @param lag Number of lags to be used for creating partial least squares components\n#' @param ncomps Number of components for pls regression\n#' @import gridExtra\n#' @import plsdepot\n#' @import ggplot2\n#' @import assertive\n#' @examples\n#' \\dontrun{\n#' data <- data\n#' daily_pls(data,lag=20,ncomps=2)\n#' }\n#' @export\n\ndaily_pls <- function(data,lag=365,ncomps=3) {\n\n  if(!is.data.frame(data) || !all(c('date','day','month','cfs','p','tmax','tmin') %in% names(data))) {\n    stop(\"data must be a data.frame with columns 'date', 'day', month','cfs','p','tmax', and 'tmin' \")}\n\n  #assert_is_date(data$date)\n  assert_is_numeric(lag)\n  assert_all_are_non_negative(lag)\n  assert_is_numeric(ncomps)\n  assert_all_are_non_negative(ncomps)\n\n  mutate <- dplyr::mutate\n\n  # prepare data\n  lag <- lag\n  X <- cbind(embed(data$p,lag+1),embed(data$tmax,lag+1),embed(data$tmin,lag+1))\n  y <- data$cfs[(lag+1):nrow(data)]\n  date <- data$date[(lag+1):nrow(data)]\n  month <- data$month[(lag+1):nrow(data)]\n  day <- data$day[(lag+1):nrow(data)]\n  pls <- plsreg1(X, y, comps = ncomps)\n\n  # plot daily residuals\n  daily <- data.frame(date=date,\n                      month=month,\n                      day=day,\n                      Q=y,\n                      residuals=pls$resid)\n\n  p1 <- ggplot(daily) +\n    geom_line(aes(date,residuals)) +\n    geom_hline(yintercept=0,linetype=\"dashed\",color=\"red\") +\n    theme_bw()\n\n  # plot median monthly residuals\n  monthly <- daily %>%\n    group_by(day,month) %>%\n    summarize(residuals=median(residuals)) %>%\n    ungroup() %>%\n    arrange(month,day) %>%\n    mutate(day=1:366,\n           month=ordered(month.abb[month], month.abb))\n\n  season.color = colorRampPalette(c(\"blue\",\"green\",\"red\",\"orange\",\"blue\"))(12)\n\n  p2 <- ggplot(monthly) + geom_line(aes(day,residuals),size=0.3) +\n    geom_line(aes(day,residuals,color=month)) + theme_bw() +\n    scale_color_manual(values=season.color) +\n    guides(col = guide_legend(ncol = 12)) +\n    geom_hline(yintercept=0, linetype=\"dashed\") +\n    labs(x=\"Julian day\",y=\"median residuals\") +\n    theme(legend.position=\"bottom\")\n\n  grid.arrange(p1,p2,ncol=1,top=\"Residuals from PLS model\")\n\n}\n\n",
    "created" : 1496849792188.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1871958487",
    "id" : "A3412017",
    "lastKnownWriteTime" : 1496863552,
    "last_content_update" : 1496863552563,
    "path" : "~/Documents/climate_signals/time_pls_package/timepls/R/daily_pls.R",
    "project_path" : "R/daily_pls.R",
    "properties" : {
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}